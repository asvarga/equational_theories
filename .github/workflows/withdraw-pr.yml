name: Withdraw PR

on:
  issue_comment:
    types: [created]

jobs:
  withdraw_pr:
    runs-on: ubuntu-latest

    steps:
    - name: Check if the comment contains "withdraw PR #PR_NUMBER"
      id: check_withdraw
      run: |
        COMMENT_BODY="${{ github.event.comment.body }}"
        if [[ "$COMMENT_BODY" =~ withdraw\ PR\ \#([0-9]+) ]]; then
          PR_NUMBER="${BASH_REMATCH[1]}"
          echo "pr_number=$PR_NUMBER" >> $GITHUB_ENV
        else
          echo "The comment does not contain a valid 'withdraw PR #PR_NUMBER' format."
          exit 0
        fi

    - name: Get issue details
      id: get_issue
      run: |
        curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} > issue.json
        cat issue.json
      continue-on-error: true

    - name: Check if the commenter is assigned to the issue
      id: check_assignee
      run: |
        COMMENTER="${{ github.event.comment.user.login }}"
        ASSIGNED=$(jq --arg user "$COMMENTER" '.assignees[]?.login | select(. == $user)' issue.json)
        if [ -z "$ASSIGNED" ]; then
          echo "not_assigned=true" >> $GITHUB_ENV
        else
          echo "not_assigned=false" >> $GITHUB_ENV
        fi

    - name: Notify the user if they are not assigned
      if: env.not_assigned == 'true'
      run: |
        echo "User ${{ github.event.comment.user.login }} is not assigned to this issue, exiting."
        exit 0

    - name: Unlink PR #${{ env.pr_number }} from the issue
      if: env.not_assigned == 'false'
      run: |
        PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.pr_number }} | jq -r '.body')

        # Remove "Closes #ISSUE_NUMBER" from the PR body
        NEW_PR_BODY=$(echo "$PR_BODY" | sed "s/Closes #${{ github.event.issue.number }}//g")

        # Escape quotes and newlines for JSON
        ESCAPED_PR_BODY=$(echo "$NEW_PR_BODY" | jq -Rs '.')

        curl -X PATCH -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d "{\"body\": $ESCAPED_PR_BODY}" \
        https://api.github.com/repos/${{ github.repository }}/pulls/${{ env.pr_number }}

    - name: Log PR and issue unlink result
      if: env.not_assigned == 'false'
      run: echo "PR ${{ env.pr_number }} has been successfully unlinked from issue ${{ github.event.issue.number }}."
